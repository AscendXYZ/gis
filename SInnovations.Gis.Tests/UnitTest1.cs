using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using SInnovations.Gis.Vector;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;
using SInnovations.Gis.Vector.Layers;
using System.Collections.Generic;

namespace SInnovations.Gis.Tests
{

    public class ThisClassCouldBeAutoGenerated : OgrEntity
    {

        public dynamic prop1 { get; set; }
        public string prop0 { get; set; }
    }

    [TestClass]
    public class UnitTest1
    {
        public string feature = @"{ ""type"": ""Feature"",
        ""geometry"": {""type"": ""Point"", ""coordinates"": [102.0, 0.5]},
        ""properties"": {""prop0"": ""value0""}
        }";

        public string featurecollection = @"{ ""type"": ""FeatureCollection"",
    ""features"": [
      { ""type"": ""Feature"",
        ""geometry"": {""type"": ""Point"", ""coordinates"": [102.0, 0.5]},
        ""properties"": {""prop0"": ""value0""}
        },
      { ""type"": ""Feature"",
        ""geometry"": {
          ""type"": ""LineString"",
          ""coordinates"": [
            [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0]
            ]
          },
        ""properties"": {
          ""prop0"": ""value0"",
          ""prop1"": 0.0
          }
        },
      { ""type"": ""Feature"",
         ""geometry"": {
           ""type"": ""Polygon"",
           ""coordinates"": [
             [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],
               [100.0, 1.0], [100.0, 0.0] ]
             ]
         },
         ""properties"": {
           ""prop0"": ""value0"",
           ""prop1"": {""this"": ""that""}
           }
         }
       ]
     }";
        [TestMethod]
        public void TestMethod1()
        {
            var feat = JObject.Parse(feature);
            var collection = JObject.Parse(featurecollection);

            var settings = new JsonSerializerSettings();
            settings.Converters.Add(new DbGeographyGeoJsonConverter());
            settings.Converters.Add(new OgrEntityConverter());

            var obj = feat.ToObject<ThisClassCouldBeAutoGenerated>(JsonSerializer.Create(settings));
           // var objs = collection.ToObject<ThisClassCouldBeAutoGenerated[]>(JsonSerializer.Create(settings));
            

        }

        //public void ThisCouldBeAWebAPIController(JToken json)
        //{
        //    VectorLayer<OgrEntity, OgrEntity> layer = null; //this is the VectorLayer<T,T1>
        //    layer.Add(json);
        //}
    }
}
